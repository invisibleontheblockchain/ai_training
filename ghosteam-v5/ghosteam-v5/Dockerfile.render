# Optimized Dockerfile for Render.com deployment
FROM python:3.9-slim

# Set working directory
WORKDIR /opt/render/project/src

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY requirements.render.txt /opt/render/project/src/requirements.txt

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY src/ /opt/render/project/src/src/
COPY config/ /opt/render/project/src/config/
COPY static/ /opt/render/project/src/static/

# Create necessary directories
RUN mkdir -p /opt/render/project/src/mlruns && \
    mkdir -p /opt/render/project/src/logs && \
    mkdir -p /opt/render/project/src/data

# Set environment variables
ENV PYTHONPATH=/opt/render/project/src
ENV PYTHONUNBUFFERED=1
ENV ENVIRONMENT=production
ENV DEBUG=false

# Expose port
EXPOSE $PORT

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:$PORT/health || exit 1

# Start the autonomous MLOps system
CMD ["python", "-m", "uvicorn", "src.autonomous_app:app", "--host", "0.0.0.0", "--port", "$PORT"]
